# ==========================================
# Server Configuration
# ==========================================
server.port=8080
spring.application.name=api-gateway

# ==========================================
# Eureka Discovery Configuration
# ==========================================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# ==========================================
# Logging (helps debug Resilience4j + Gateway)
# ==========================================
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.io.github.resilience4j.circuitbreaker=DEBUG
logging.level.org.springframework.web.reactive.function.client=DEBUG

# ==========================================
# Enable Discovery Locator (so Gateway knows the service names)
# ==========================================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ==========================================
# ================= EMPLOYEE SERVICE =================
spring.cloud.gateway.routes[0].id=employee-service
spring.cloud.gateway.routes[0].uri=lb://employee-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v2/employees/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=employeeCircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/employee
spring.cloud.gateway.routes[0].filters[1].name=RequestRateLimiter
spring.cloud.gateway.routes[0].filters[1].args.key-resolver=#{@inMemoryKeyResolver}
spring.cloud.gateway.routes[0].filters[1].args.replenishRate=5
spring.cloud.gateway.routes[0].filters[1].args.burstCapacity=10

# ================= PROJECT SERVICE =================
spring.cloud.gateway.routes[1].id=project-service
spring.cloud.gateway.routes[1].uri=lb://project-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v2/projects/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=projectCircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/project
spring.cloud.gateway.routes[1].filters[1].name=RequestRateLimiter
spring.cloud.gateway.routes[1].filters[1].args.key-resolver=#{@inMemoryKeyResolver}
spring.cloud.gateway.routes[1].filters[1].args.replenishRate=4
spring.cloud.gateway.routes[1].filters[1].args.burstCapacity=8

# ================= UI FRONTEND SERVICE =================
spring.cloud.gateway.routes[2].id=ui-frontend
spring.cloud.gateway.routes[2].uri=lb://ui-frontend
spring.cloud.gateway.routes[2].predicates[0]=Path=/ui/**

# ==========================================
# Resilience4j Circuit Breaker Configuration
# ==========================================
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.sliding-window-size=5
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.employeeCircuitBreaker.automatic-transition-from-open-to-half-open-enabled=true

resilience4j.circuitbreaker.instances.projectCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.projectCircuitBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.projectCircuitBreaker.sliding-window-size=5
resilience4j.circuitbreaker.instances.projectCircuitBreaker.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.projectCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.projectCircuitBreaker.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.projectCircuitBreaker.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.projectCircuitBreaker.automatic-transition-from-open-to-half-open-enabled=true

# ==========================================
# Management Endpoints (for health/metrics)
# ==========================================
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.metrics.tags.application=${spring.application.name}
